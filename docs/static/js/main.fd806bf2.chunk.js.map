{"version":3,"sources":["library-client.ts","components/userList.tsx","components/userCheck.tsx","components/game.tsx","components/gameList.tsx","components/theme.tsx","components/alert.tsx","components/app.tsx","index.tsx"],"names":["_","require","getUserId","handle","token","a","key","cachedid","localStorage","getItem","JSON","parse","fetch","method","headers","response","json","steamid","setItem","stringify","getGames","cachedgames","undefined","fetchGames","Promise","resolve","then","catch","err","console","log","alert","games","getFriends","cachedfriends","fetchFriends","friends","fetchLibraries","handles","fetchLibrary","fetchAll","libs","resolvedCount","i","library","length","libraries","getLibraries","getSummaries","fetchSummaries","fetchSummary","getProfile","summary","fetchSummaryByHandle","sums","summaries","cachedprofiles","fetchProfile","profile","verifyRecaptcha","callback","body","block","display","UserList","props","mainUser","addUserHandler","removeUserHandler","waitingFunc","useState","setSummaries","useEffect","client","Object","keys","style","fontSize","marginLeft","paddingTop","className","maxWidth","marginBottom","map","user","includes","steamID","nickname","alignItems","onClick","event","$","target","parent","hasClass","toggleClass","siblings","removeClass","addClass","attr","src","avatar","medium","alt","title","width","height","marginRight","UserCheck","userHandler","waiting","setHandle","jwt","setJwt","window","checkUser","tryCheckUser","script","document","createElement","type","innerHTML","appendChild","placeholder","value","onChange","e","onKeyPress","paddingLeft","justifyContent","img","float","userimg","imgs","users","Game","game","appID","name","logoURL","multiplayerIds","PopulateList","multiplayerOnly","output","forEach","push","GameList","scroll","setGames","setLibraries","multiplayerFlag","setMultiplayerFlag","scrolled","setScrolled","listRef","useRef","scrollToList","current","ensureData","combined","owned","unique","uniqWith","isEqual","sort","b","gameA","toUpperCase","gameB","comparison","filter","obj","some","obj2","test","ref","enabled","textAlign","disabled","Theme","themeStyle","setThemeStyle","buttonStyle","setButtonStyle","showThemeHandler","StyledPopup","styled","Popup","Alert","content","onClose","open","setOpen","closeOnDocumentClick","alignCenter","header","overflow","textOverflow","whiteSpace","padding","App","setHandles","setMainUser","lastAction","setLastAction","alertContent","setAlertContent","setWaiting","mainUserCache","handleCache","cachedHandles","waitingHandler","added","concat","index","indexOf","removed","splice","clearCacheButton","theme","clear","location","reload","href","border","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fd806bf2.chunk.js","sourcesContent":["var _ = require('lodash');\r\n\r\nconst verifyCaptchaUrl = 'https://54z0aarbpc.execute-api.eu-west-1.amazonaws.com/default/verify_reCaptcha_Function';\r\nconst resolveUserUrl = 'https://9192zxrrp6.execute-api.eu-west-1.amazonaws.com/default/get_steamUserIdFromHandle_Function';\r\nconst gamesListUrl = 'https://k14n0rcap5.execute-api.eu-west-1.amazonaws.com/default/get_userOwnedGames_Function';\r\nconst userSummaryUrl = 'https://8ydkm187n9.execute-api.eu-west-1.amazonaws.com/default/get_userSummary_Function';\r\nconst friendListUrl = 'https://nuxq04drl5.execute-api.eu-west-1.amazonaws.com/default/get_userFriendList_Function';\r\n\r\nexport const process = (libraries, summaries) => {\r\n\r\n  if (!libraries || !summaries) {\r\n    return null;\r\n  }\r\n\r\n  // combine all libraries, duplicates included\r\n  let combined: any[] = [];\r\n\r\n  const keys = Object.keys(libraries);\r\n\r\n  keys.forEach(key => {\r\n    const library = libraries[key];\r\n\r\n    // wipe old data\r\n    library.forEach(game => {\r\n      delete game.owned;\r\n      delete game.users;\r\n    });\r\n\r\n    combined.push(...library);\r\n  });\r\n\r\n  // get all unique games in all libraries\r\n  let unique = _.uniqWith(combined, _.isEqual);\r\n\r\n  // order the unique games\r\n  const compare = (a, b) => {\r\n    const gameA = a.name.toUpperCase();\r\n    const gameB = b.name.toUpperCase();\r\n\r\n    let comparison = 0;\r\n    if (gameA > gameB) {\r\n      comparison = 1;\r\n    } else if (gameA < gameB) {\r\n      comparison = -1;\r\n    }\r\n    return comparison;\r\n  }\r\n\r\n  unique.sort(compare);\r\n\r\n  // count how many users own each game and add a property to record it\r\n  keys.forEach(key => {\r\n\r\n    const library = libraries[key];\r\n\r\n    // find values that are in unique list and also in library\r\n    var owned = unique.filter(function(obj) {\r\n        return library.some(function(obj2) {\r\n            return obj.appID === obj2.appID;\r\n        });\r\n    });\r\n\r\n    // loop through the owned list and increase the count in the unique list\r\n    owned.forEach(game => {\r\n\r\n      const current = unique.filter(test => test.appID === game.appID)\r\n\r\n      if (current.length === 1) {\r\n        if (current[0][\"owned\"]) {\r\n          current[0][\"owned\"]++;\r\n        } else {\r\n          current[0][\"owned\"] = 1;\r\n          current[0][\"users\"] = [];\r\n        }\r\n        current[0][\"users\"].push(summaries[key]);\r\n      }\r\n    });\r\n  });\r\n\r\n  // order by number owned\r\n  const compare2 = (a, b) => {\r\n    const gameA = a.owned;\r\n    const gameB = b.owned;\r\n\r\n    let comparison = 0;\r\n    if (gameA < gameB) {\r\n      comparison = 1;\r\n    } else if (gameA > gameB) {\r\n      comparison = -1;\r\n    }\r\n    return comparison;\r\n  }\r\n\r\n  unique.sort(compare2);\r\n\r\n  // trim off games that are only owned by 1 users\r\n  const filtered = unique.filter(test => {\r\n    return test.owned > 1\r\n  });\r\n\r\n  return filtered;\r\n}\r\n\r\n\r\nconst getUserId = async (handle, token) => {\r\n\r\n  const key = `${handle}_steamid`;\r\n\r\n  const cachedid = localStorage.getItem(key);\r\n  if (cachedid != null && cachedid !== '')\r\n    return JSON.parse(cachedid);\r\n\r\n  const response = await fetch(`${resolveUserUrl}?handle=${handle}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                \"Authorization\": `Bearer ${token}`\r\n            }\r\n        });\r\n\r\n  const steamid = await response.json();\r\n\r\n  localStorage.setItem(key, JSON.stringify(steamid));\r\n\r\n  return steamid;\r\n}\r\n\r\n\r\nconst getGames = async (steamid, handle, token) => {\r\n\r\n  const key = `${steamid}_games`;\r\n\r\n  const cachedgames = localStorage.getItem(key);\r\n  if (cachedgames && cachedgames !== undefined && cachedgames !== '') {\r\n    try {\r\n       return JSON.parse(cachedgames);\r\n    }\r\n    catch {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  const fetchGames = (steamid) => {\r\n    return new Promise((resolve) => {\r\n      (async () => {\r\n        await fetch(`${gamesListUrl}?steamid=${steamid}`, {\r\n                  method: 'GET',\r\n                  headers: {\r\n                      \"Authorization\": `Bearer ${token}`\r\n                  }\r\n              })\r\n          .then(response => response.json())\r\n          .then(response => {\r\n            resolve(response)\r\n          })\r\n          .catch(err => {\r\n            console.log(err);\r\n            alert(`Game list fetch failed for ${handle}. Are the games listed as public?`);\r\n            resolve(null);\r\n          });\r\n        })();\r\n      });\r\n  };\r\n\r\n  const games = await fetchGames(steamid);\r\n\r\n  if (games) {\r\n    localStorage.setItem(key, JSON.stringify(games));\r\n  }\r\n\r\n  return games;\r\n}\r\n\r\n\r\nexport const getFriends = async (steamid, handle, token) => {\r\n\r\n  const key = `${steamid}_friends`;\r\n\r\n  const cachedfriends = localStorage.getItem(key);\r\n  if (cachedfriends && cachedfriends !== undefined && cachedfriends !== '') {\r\n    try {\r\n       return JSON.parse(cachedfriends);\r\n    }\r\n    catch {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  const fetchFriends = (steamid) => {\r\n    return new Promise((resolve) => {\r\n      (async () => {\r\n        await fetch(`${friendListUrl}?steamid=${steamid}`, {\r\n                  method: 'GET',\r\n                  headers: {\r\n                      \"Authorization\": `Bearer ${token}`\r\n                  }\r\n              })\r\n          .then(response => response.json())\r\n          .then(response => {\r\n            resolve(response)\r\n          })\r\n          .catch(err => {\r\n            alert(`Friend list fetch failed for ${handle}.`);\r\n            resolve(null);\r\n          });\r\n        })();\r\n      });\r\n  };\r\n\r\n  const friends = await fetchFriends(steamid);\r\n\r\n  if (friends) {\r\n    localStorage.setItem(key, JSON.stringify(friends));\r\n  }\r\n\r\n  return friends;\r\n}\r\n\r\n\r\nconst fetchLibraries = async (handles, token) => {\r\n\r\n  const fetchLibrary = (handle, token) => {\r\n    return new Promise((resolve) => {\r\n      (async () => {\r\n        await getUserId(handle, token)\r\n          .then(async steamid => {\r\n            await getGames(steamid, handle, token)\r\n              .then(games => {\r\n                  resolve(games);\r\n              })\r\n          });\r\n        })();\r\n      });\r\n  };\r\n\r\n  const fetchAll = (token) => {\r\n\r\n    return new Promise((resolve) => {\r\n\r\n      (async () => {\r\n        let libs = {};\r\n        let resolvedCount = 0;\r\n\r\n        for (let i = 0; i < handles.length; i++) {\r\n\r\n          const handle = handles[i];\r\n\r\n          await (async () => {\r\n            const library = await fetchLibrary(handle, token);\r\n\r\n            if (library) {\r\n              libs[handle] = library;\r\n            }\r\n          })();\r\n\r\n          resolvedCount++;\r\n          if (resolvedCount === handles.length) {\r\n            resolve(libs);\r\n          }\r\n      }})();\r\n    });\r\n  };\r\n\r\n  const libraries = await fetchAll(token);\r\n  return libraries;\r\n};\r\n\r\n\r\nexport const getLibraries = async (handles, token) => {\r\n  return await fetchLibraries(handles, token);\r\n};\r\n\r\n\r\nexport const getSummaries = async (handles, token) => {\r\n  return await fetchSummaries(handles, token);\r\n};\r\n\r\n\r\nexport const fetchSummary = (steamid, token) => {\r\n  return new Promise((resolve) => {\r\n    (async () => {\r\n        await getProfile(steamid, token)\r\n          .then(summary => {\r\n              resolve(summary);\r\n          })\r\n          .catch(() => resolve(null));\r\n      })();\r\n    });\r\n};\r\n\r\n\r\nexport const fetchSummaryByHandle = (handle, token) => {\r\n  return new Promise((resolve) => {\r\n    (async () => {\r\n      await getUserId(handle, token)\r\n        .then(async steamid => {\r\n          await getProfile(steamid, token)\r\n            .then(summary => {\r\n                resolve(summary);\r\n            })\r\n            .catch(() => resolve(null));\r\n        })\r\n        .catch(() => resolve(null));\r\n      })();\r\n    });\r\n};\r\n\r\n\r\nexport const fetchFriends = (handle, token) => {\r\n  return new Promise((resolve) => {\r\n    (async () => {\r\n      await getUserId(handle, token)\r\n        .then(async steamid => {\r\n          await getFriends(steamid, handle, token)\r\n            .then(summaries => {\r\n                resolve(summaries);\r\n            })\r\n            .catch(() => resolve(null));\r\n        })\r\n        .catch(() => resolve(null));\r\n      })();\r\n    });\r\n};\r\n\r\n\r\nconst fetchSummaries = async (handles, token) => {\r\n\r\n  const fetchAll = (token) => {\r\n\r\n    return new Promise((resolve) => {\r\n\r\n      (async () => {\r\n        let sums = {};\r\n        let resolvedCount = 0;\r\n\r\n        for (let i = 0; i < handles.length; i++) {\r\n\r\n          const handle = handles[i];\r\n\r\n          await (async () => {\r\n            const summary = await fetchSummary(handle, token);\r\n\r\n            if (summary) {\r\n              sums[handle] = summary;\r\n            }\r\n          })();\r\n\r\n          resolvedCount++;\r\n          if (resolvedCount === handles.length) {\r\n            resolve(sums);\r\n          }\r\n      }})();\r\n    });\r\n  };\r\n\r\n  const summaries = await fetchAll(token);\r\n  return summaries;\r\n};\r\n\r\n\r\nconst getProfile = async (steamid, token) => {\r\n\r\n  const key = `${steamid}_profile`;\r\n\r\n  const cachedprofiles = localStorage.getItem(key);\r\n  if (cachedprofiles != null && cachedprofiles !== '')\r\n    return JSON.parse(cachedprofiles);\r\n\r\n  const fetchProfile = (steamid, token) => {\r\n    return new Promise((resolve) => {\r\n      (async () => {\r\n        await fetch(`${userSummaryUrl}?steamid=${steamid}`, {\r\n                  method: 'GET',\r\n                  headers: {\r\n                      \"Authorization\": `Bearer ${token}`\r\n                  }\r\n              })\r\n          .then(response => response.json())\r\n          .then(response => {\r\n            resolve(response)\r\n          })\r\n          .catch(() => {\r\n            console.log(\"User profile fetch failed\");\r\n            resolve(null);\r\n          });\r\n        })();\r\n      });\r\n  };\r\n\r\n  const profile = await fetchProfile(steamid, token);\r\n\r\n  if (profile) {\r\n    localStorage.setItem(key, JSON.stringify(profile));\r\n  }\r\n\r\n  return profile;\r\n}\r\n\r\n\r\nexport const verifyRecaptcha = (token, callback) => {\r\n\r\n  fetch(`${verifyCaptchaUrl}`, {\r\n    method: 'POST',\r\n    body: JSON.stringify({ 'token': token })\r\n  })\r\n  .then(response => response.json())\r\n  .then(response => {\r\n    callback(response);\r\n  })\r\n  .catch(() => {\r\n    console.log(`Recaptcha verification failed`);\r\n  });\r\n\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport * as client from './../library-client';\r\n\r\nconst block = {\r\n  display: 'block',\r\n} as React.CSSProperties;\r\n\r\n\r\n\r\nexport default function UserList(props) {\r\n\r\n  let { mainUser, addUserHandler, handles, removeUserHandler, token, waitingFunc } = props;\r\n\r\n  const [summaries, setSummaries] = useState({} as any);\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    if (!token || token === '' || mainUser === '') {\r\n      return;\r\n    }\r\n\r\n    client.fetchFriends(mainUser, token)\r\n      .then(sums => {\r\n        setSummaries(sums)\r\n        if (waitingFunc && waitingFunc !== null) {\r\n          waitingFunc(false);\r\n        }\r\n      });\r\n\r\n  // eslint-disable-next-line\r\n  }, [mainUser, token]);\r\n\r\n\r\n  const toggleFriend = handle => {\r\n    if (!handles.includes(handle)) {\r\n      addUserHandler(handle, token);\r\n    } else {\r\n      removeUserHandler(handle, token);\r\n    }\r\n  }\r\n\r\n  if (!summaries || Object.keys(summaries).length === 0) {\r\n    return null;\r\n  }\r\n\r\n  return (<div style={block}>\r\n    <p style={{fontSize:'18px', marginLeft: '10px', paddingTop: '20px'}}>Select friends to compare</p>\r\n    <div className=\"list select multiple\" style={{\r\n      maxWidth: '300px', marginLeft: '5px', marginBottom: '20px'}}>\r\n    {\r\n      summaries.map(user => {\r\n        return (<div className={handles.includes(user.steamID) ? 'item active' : 'item'} key={`user_${user.nickname}`}\r\n          style={{\r\n            marginBottom: '10px',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            maxWidth: '300px'}}\r\n            onClick={event => {\r\n              if ($(event.target).parent().hasClass(\"multiple\")) {\r\n                $(event.target).toggleClass(\"active\")\r\n              } else {\r\n                $(event.target).siblings().removeClass(\"active\")\r\n                $(event.target).addClass(\"active\")\r\n              }\r\n              $(event.target).attr(\"init\", \"true\");\r\n              toggleFriend(user.steamID)\r\n            }}>\r\n          <img src={user.avatar.medium}\r\n               alt=\"\"\r\n               title={user.nickname}\r\n               width=\"30\"\r\n               height=\"30\"\r\n               style={{marginRight: '20px'}}/>\r\n               {user.nickname}\r\n            </div>)\r\n          })}\r\n          </div>\r\n        </div>)\r\n      }\r\n\r\n\r\nUserList.propTypes = {\r\n  mainUser: PropTypes.any.isRequired,\r\n  handles: PropTypes.any.isRequired,\r\n  addUserHandler: PropTypes.any.isRequired,\r\n  removeUserHandler: PropTypes.any.isRequired,\r\n  token: PropTypes.any.isRequired,\r\n  waitingFunc: PropTypes.any,\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport * as client from './../library-client';\r\n\r\nimport Spinner from 'reactjs-simple-spinner'\r\n\r\nexport default function UserCheck(props) {\r\n\r\n  let { userHandler, mainUser, waitingFunc, waiting } = props;\r\n\r\n  const prompt = 'Enter your Steam profile name';\r\n  const [handle, setHandle] = useState('');\r\n  const [jwt, setJwt] = useState('');\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    if (mainUser !== '') {\r\n      setHandle(mainUser);\r\n    }\r\n\r\n    window[\"verifyRecaptcha\"] = client.verifyRecaptcha;\r\n    window[\"checkUser\"] = checkUser;\r\n\r\n  // eslint-disable-next-line\r\n  }, [mainUser]);\r\n\r\n\r\n\r\n  const checkUser = (handle, jwt) => {\r\n    userHandler(handle, jwt);\r\n    setJwt(jwt);\r\n  }\r\n\r\n\r\n\r\n  const tryCheckUser = () => {\r\n\r\n    if (handle === '') {\r\n      userHandler('', '');\r\n      return;\r\n    }\r\n\r\n    if (jwt && jwt !== '') {\r\n      checkUser(handle, jwt);\r\n      return;\r\n    }\r\n\r\n    waitingFunc(true);\r\n\r\n    const script = document.createElement('script');\r\n\r\n    script.type = \"text/javascript\";\r\n    script.innerHTML = `\r\n      grecaptcha.ready(function(){\r\n        grecaptcha.execute(\"6LfDq_MUAAAAAB_Kefr15OvioLopWcs2YELeXbP9\", {action: 'homepage'}).then(function(token) {\r\n          window[\"verifyRecaptcha\"](token, (jwt) => {\r\n            if (jwt && jwt !== '') {\r\n              window[\"checkUser\"]('${handle}', jwt);\r\n            }\r\n          })\r\n        })\r\n      });\r\n    `;\r\n\r\n    document.body.appendChild(script);\r\n  }\r\n\r\n\r\n\r\n  const handleChange = e => {\r\n    setHandle(e.target.value);\r\n  }\r\n\r\n  const handleKeypress = e => {\r\n    if (e.key === 'Enter') {\r\n      tryCheckUser();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={{marginBottom: '20px'}}>\r\n      <input placeholder={prompt} value={handle} onChange={handleChange} onKeyPress={handleKeypress} style={{marginLeft: '3px', paddingLeft: '20px', fontSize: '18px', height: '60px', maxWidth: '300px'}} />\r\n      <div className=\"btn\" onClick={tryCheckUser} style={{display: 'flex', alignItems: 'center', height: '60px', justifyContent: 'center', maxWidth: '300px'}}>\r\n        <span style={{marginRight: '20px'}}>Get Friends</span>\r\n        { waiting ? <Spinner /> : <></> }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nUserCheck.propTypes = {\r\n  userHandler: PropTypes.any.isRequired,\r\n  mainUser: PropTypes.any.isRequired,\r\n  waiting: PropTypes.any.isRequired,\r\n  waitingFunc: PropTypes.any.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst img = {\r\n  float: 'left',\r\n  marginRight: '20px',\r\n  marginBottom: '7px'\r\n} as React.CSSProperties;\r\n\r\nconst userimg = {\r\n  marginRight: '7px',\r\n  marginBottom: '7px'\r\n} as React.CSSProperties;\r\n\r\nconst imgs = {\r\n  display: 'table',\r\n  marginBottom: '30px'\r\n} as React.CSSProperties;\r\n\r\nconst users = {\r\n  display: 'inline',\r\n} as React.CSSProperties;\r\n\r\n\r\n\r\nexport default function Game(props) {\r\n\r\n  let { game } = props;\r\n  const key = `img_${game.appID}`;\r\n\r\n  return (\r\n    <div style={imgs}>\r\n      <h5>{game.name}</h5>\r\n      <img key={key} src={game.logoURL} alt={game.name} style={img} />\r\n      <div style={users}>\r\n        { game.users.map(user =>\r\n          <img key={`${key}_${user.nickname}`}\r\n               src={user.avatar.medium}\r\n               alt={user.nickname}\r\n               title={user.nickname}\r\n               style={userimg}\r\n               width=\"29\"\r\n               height=\"29\" />) }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nGame.propTypes = {\r\n  game: PropTypes.any.isRequired,\r\n};\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Game from './game';\r\nimport * as client from './../library-client';\r\n\r\nconst multiplayerIds = require('./../data/multiplayer.json');\r\n\r\nconst marginBottom = {\r\n  marginBottom: '20px'\r\n} as React.CSSProperties;\r\n\r\n\r\n\r\nfunction PopulateList(props): any {\r\n\r\n    let { games, multiplayerOnly } = props;\r\n\r\n    if (!games || !games.length) {\r\n      return null;\r\n    }\r\n\r\n    let output: any[] = [];\r\n\r\n    games.forEach(game => {\r\n      const key = `game_${game.appID}`;\r\n\r\n      if (multiplayerOnly && !multiplayerIds.includes(game.appID)) {\r\n        return;\r\n      }\r\n\r\n      output.push(<Game key={key} game={game} />);\r\n    });\r\n\r\n    if (output.length) {\r\n      return output;\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\n\r\n\r\nexport default function GameList(props) {\r\n\r\n  let { handles, scroll, token } = props;\r\n\r\n  const [games, setGames] = useState({} as any);\r\n  const [libraries, setLibraries] = useState({} as any);\r\n  const [summaries, setSummaries] = useState({} as any);\r\n  const [multiplayerFlag, setMultiplayerFlag] = useState(true);\r\n  const [scrolled, setScrolled] = useState(false);\r\n\r\n  const listRef = useRef(null);\r\n\r\n  const scrollToRef = (ref) => {\r\n    if (ref.current && !scrolled) {\r\n      setScrolled(true);\r\n      // ref.current.scrollIntoView({ behavior: 'smooth', block: 'start' });\r\n    }\r\n  }\r\n\r\n  const scrollToList = () => {\r\n    if (listRef) {\r\n      scrollToRef(listRef)\r\n    }\r\n  };\r\n\r\n  const ensureData = () => {\r\n    if (!libraries) {\r\n      return false;\r\n    } else {\r\n      const keys = Object.keys(libraries);\r\n      if (!keys.length) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    if (!summaries) {\r\n      return false;\r\n    } else {\r\n      const keys = Object.keys(summaries);\r\n      if (!keys.length) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    if (!token || token === '') {\r\n      return;\r\n    }\r\n\r\n    client.getLibraries(handles, token)\r\n      .then(libs => {\r\n        setLibraries(libs)\r\n      });\r\n\r\n    client.getSummaries(handles, token)\r\n      .then(sums => {\r\n        setSummaries(sums)\r\n      });\r\n\r\n  // eslint-disable-next-line\r\n  }, [handles, token]);\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    if (!ensureData()) {\r\n      return;\r\n    }\r\n\r\n    // hack-tastic, to get round async updates\r\n    if (!(handles.length === Object.keys(libraries).length &&  Object.keys(libraries).length === Object.keys(summaries).length)) {\r\n      return;\r\n    }\r\n\r\n    const games = client.process(libraries, summaries);\r\n\r\n    setGames(games);\r\n\r\n  // eslint-disable-next-line\r\n  }, [libraries, summaries]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    if (handles.length > 1 && scroll) {\r\n      scrollToList();\r\n    }\r\n\r\n  // eslint-disable-next-line\r\n  }, [games]);\r\n\r\n\r\n\r\n  if (handles.length < 2) {\r\n    return null;\r\n  }\r\n\r\n\r\n  if (!ensureData()) {\r\n    return null;\r\n  }\r\n\r\n\r\n\r\n  const flagHandler = () => {\r\n    setMultiplayerFlag(!multiplayerFlag);\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div ref={listRef}>\r\n      <br />\r\n      <h4>Matched Games</h4>\r\n      <div className={`switch ${multiplayerFlag ? 'active' : ''}`} style={marginBottom} onClick={flagHandler}><span className=\"head\"></span></div>\r\n      <div className=\"label\" style={marginBottom}>Multiplayer only</div>\r\n      <PopulateList games={games} multiplayerOnly={multiplayerFlag} />\r\n    </div>\r\n  );\r\n}\r\n\r\nGameList.propTypes = {\r\n  handles: PropTypes.any.isRequired,\r\n  scroll: PropTypes.any.isRequired,\r\n  token: PropTypes.any.isRequired\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport './../styles/app.css';\r\n\r\nconst enabled = {\r\n  display: 'block',\r\n  textAlign: 'center'\r\n} as React.CSSProperties;\r\n\r\nconst disabled = {\r\n  display: 'none',\r\n} as React.CSSProperties;\r\n\r\n\r\n\r\nexport default function Theme() {\r\n\r\n  const [themeStyle, setThemeStyle] = useState(enabled);\r\n  const [buttonStyle, setButtonStyle] = useState(disabled);\r\n\r\n  useEffect(() => {\r\n\r\n    window[\"themeHandlerClient\"] = showThemeHandler;\r\n\r\n    const script = document.createElement('script');\r\n\r\n    script.type = \"text/javascript\"\r\n    script.innerHTML = `\r\n      var originalSetTheme = fluid.theme;\r\n\r\n      fluid.theme = function(value) {\r\n        window[\"themeHandlerClient\"]();\r\n        originalSetTheme(value);\r\n      };\r\n    `;\r\n\r\n    document.body.appendChild(script);\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n\r\n\r\n  const showThemeHandler = () => {\r\n    if (themeStyle === disabled) {\r\n      setThemeStyle(enabled);\r\n      setButtonStyle(disabled);\r\n    } else {\r\n      setButtonStyle(enabled);\r\n      setThemeStyle(disabled);\r\n    }\r\n  }\r\n\r\n  return (<>\r\n    <br/>\r\n    <div className=\"btns row themeSelector\" style={themeStyle}></div>\r\n    <div className=\"btn\" style={buttonStyle} onClick={showThemeHandler}>Change Theme</div>\r\n  </>);\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Popup from \"reactjs-popup\";\r\nimport styled from 'styled-components';\r\n\r\nimport './../styles/app.css';\r\n\r\n\r\nconst StyledPopup = styled(Popup)`\r\n  &-overlay {\r\n   ...\r\n  }\r\n  // use your custom style for \".popup-content\"\r\n  &-content {\r\n   width: auto !important;\r\n   font-size: 30px !important;\r\n   color: #3D4F66 !important;\r\n   font-family: var(--textFont) !important;\r\n   background-color: #eee !important;\r\n   padding: 15px !important;\r\n   text-align: center !important;\r\n   font-weight: bold !important;\r\n  }\r\n`\r\n\r\nexport default function Alert(props) {\r\n\r\n  let { content, onClose } = props;\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const openModal = () => {\r\n    setOpen(true);\r\n  }\r\n  const closeModal = () => {\r\n    setOpen(false);\r\n    onClose();\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (content !== '') {\r\n      openModal();\r\n    }\r\n  // eslint-disable-next-line\r\n  }, [content]);\r\n\r\n  return (\r\n    <div>\r\n      <StyledPopup\r\n        open={open}\r\n        closeOnDocumentClick\r\n        onClose={closeModal}>\r\n        {content}\r\n      </StyledPopup>\r\n    </div>\r\n  );\r\n}\r\n\r\nAlert.propTypes = {\r\n  content: PropTypes.any.isRequired,\r\n  onClose: PropTypes.any.isRequired\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport './../styles/app.css';\r\n\r\nimport UserList from './userList';\r\nimport UserCheck from './userCheck';\r\nimport GameList from './gameList';\r\nimport Theme from './theme';\r\nimport Alert from './alert';\r\n\r\nimport * as client from './../library-client';\r\n\r\nconst marginBottom = {\r\n  marginBottom: '40px'\r\n} as React.CSSProperties;\r\n\r\nconst alignCenter = {\r\n  textAlign: 'center',\r\n  display: 'block'\r\n} as React.CSSProperties;\r\n\r\nconst header = {\r\n  textAlign: 'center',\r\n  overflow: 'hidden',\r\n  textOverflow: 'ellipsis',\r\n  whiteSpace: 'nowrap',\r\n  padding: '20px 0'\r\n} as React.CSSProperties;\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  const [handles, setHandles] = useState([] as string[]);\r\n  const [mainUser, setMainUser] = useState('');\r\n  const [lastAction, setLastAction] = useState('');\r\n  const [alertContent, setAlertContent] = useState('');\r\n  const [jwt, setJwt] = useState('');\r\n  const [waiting, setWaiting] = useState(false);\r\n\r\n  useEffect(() => {\r\n\r\n    const mainUserCache = localStorage.getItem(\"mainUser\")\r\n    const handleCache = localStorage.getItem(\"handles\")\r\n\r\n    if (mainUserCache && mainUserCache !== '') {\r\n\r\n      window[\"verifyRecaptcha\"] = client.verifyRecaptcha;\r\n      window[\"setJwt\"] = setJwt;\r\n      window[\"setMainUser\"] = setMainUser;\r\n      window[\"setHandles\"] = setHandles;\r\n      window[\"mainUser\"] = mainUserCache;\r\n\r\n      if (handleCache && handleCache !== '') {\r\n        const cachedHandles = JSON.parse(handleCache) as string[];\r\n        window[\"cachedHandles\"] = cachedHandles;\r\n      }\r\n\r\n      const script = document.createElement('script');\r\n\r\n      script.type = \"text/javascript\"\r\n      script.innerHTML = `\r\n        grecaptcha.ready(function(){\r\n          grecaptcha.execute(\"6LfDq_MUAAAAAB_Kefr15OvioLopWcs2YELeXbP9\", {action: 'homepage'}).then(function(token) {\r\n            window[\"verifyRecaptcha\"](token, (jwt) => {\r\n              if (jwt && jwt !== '') {\r\n                window[\"setMainUser\"](window[\"mainUser\"]);\r\n                window[\"setJwt\"](jwt);\r\n\r\n                if (window[\"cachedHandles\"] !== undefined) {\r\n                  window[\"setHandles\"](window[\"cachedHandles\"]);\r\n                }\r\n              }\r\n            })\r\n          })\r\n        });\r\n      `;\r\n\r\n      document.body.appendChild(script);\r\n    }\r\n\r\n  }, []);\r\n\r\n\r\n\r\n  const clearCacheHandler = () => {\r\n    const theme = localStorage.getItem(\"fluidTheme\") as string;\r\n    localStorage.clear();\r\n    localStorage.setItem(\"mainUser\", mainUser);\r\n    localStorage.setItem(\"handles\", JSON.stringify(handles));\r\n    localStorage.setItem(\"fluidTheme\", theme);\r\n\r\n    window.location.reload(false);\r\n  }\r\n\r\n\r\n  const waitingHandler = value => {\r\n    setWaiting(value);\r\n  };\r\n\r\n\r\n  const userHandler = async (handle, token, setWaiting) => {\r\n\r\n    if (handle === '') {\r\n      setAlertContent(\"Please enter a valid Steam user\");\r\n      return;\r\n    }\r\n\r\n    if (token !== '') {\r\n      setJwt(token);\r\n    }\r\n\r\n    if (!handles.includes(handle)) {\r\n\r\n      await (async () => {\r\n        const summary = await client.fetchSummaryByHandle(handle, token) as any;\r\n\r\n        if (summary) {\r\n          localStorage.setItem(\"mainUser\", handle);\r\n          setMainUser(handle);\r\n          const added = [].concat(summary.steamID);\r\n          localStorage.setItem(\"handles\", JSON.stringify(added));\r\n          setHandles(added);\r\n          setLastAction('add');\r\n        } else {\r\n          setAlertContent(\"User not found - is your profile public?\");\r\n        }\r\n      })();\r\n    } else {\r\n      setAlertContent(\"User already added\");\r\n    }\r\n  };\r\n\r\n\r\n  const addUserHandler = async (handle, token) => {\r\n\r\n    if (handle === '') {\r\n      setAlertContent(\"Please enter a valid Steam user\");\r\n      return;\r\n    }\r\n\r\n    if (token !== '') {\r\n      setJwt(token);\r\n    }\r\n\r\n    if (!handles.includes(handle)) {\r\n\r\n      await (async () => {\r\n        const summary = await client.fetchSummary(handle, token);\r\n\r\n        if (summary) {\r\n          const added = handles.concat(handle);\r\n          localStorage.setItem(\"handles\", JSON.stringify(added));\r\n          setHandles(added);\r\n          setLastAction('add');\r\n          if (added.length === 1) {\r\n            setMainUser(handle);\r\n          }\r\n        } else {\r\n          setAlertContent(\"User not found - is the user's profile public?\");\r\n          return;\r\n        }\r\n      })();\r\n    } else {\r\n      setAlertContent(\"User already added\");\r\n      return;\r\n    }\r\n  };\r\n\r\n  const removeUserHandler = async (handle) => {\r\n\r\n    if (handle === '') {\r\n      setAlertContent(\"Username not provided\");\r\n      return;\r\n    }\r\n\r\n    const index = handles.indexOf(handle);\r\n    if (index > -1) {\r\n      const removed = handles.splice(0);\r\n      removed.splice(index, 1);\r\n      localStorage.setItem(\"handles\", JSON.stringify(removed));\r\n      setHandles(removed);\r\n      setLastAction('remove');\r\n    } else {\r\n      setAlertContent(\"User to remove not found\");\r\n    }\r\n  };\r\n\r\n  const closeAlert = () => {\r\n    setAlertContent('');\r\n  }\r\n\r\n\r\n  const clearCacheButton =\r\n      <div className=\"btn\"\r\n        onClick={clearCacheHandler}\r\n        style={{display: 'flex', alignItems: 'center', height: '60px', justifyContent: 'center', maxWidth: '300px'}}\r\n      >Refresh</div>\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"section\">\r\n        <div className=\"body\">\r\n          <Theme />\r\n        </div>\r\n        <div style={header}>\r\n          <h2>Steam Social</h2>\r\n        </div>\r\n        <div className=\"body\">\r\n          <p style={marginBottom}>\r\n            Compare Steam libraries to help organise online multiplayer sessions with your friends.\r\n          </p>\r\n          <p style={marginBottom}>\r\n            Ensure the accounts you want to compare have both a public profile and a public games list.\r\n          </p>\r\n          <p style={marginBottom}>\r\n            If you find the service useful, please consider supporting me on ko-fi.<br/><br/><br/><br/>\r\n            <span style={alignCenter}>\r\n              <a href='https://ko-fi.com/Q5Q61R4DM' target='_new'><img height='36' style={{border:'0px', height:'36px'}} src='https://cdn.ko-fi.com/cdn/kofi3.png?v=2'  alt='Buy Me a Coffee at ko-fi.com' /></a>\r\n            </span>\r\n            <br/>\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"section\">\r\n        <div className=\"body\">\r\n          <UserCheck waiting={waiting} waitingFunc={waitingHandler} userHandler={userHandler} mainUser={mainUser} />\r\n          <UserList waitingFunc={waitingHandler} mainUser={mainUser} handles={handles} addUserHandler={addUserHandler} removeUserHandler={removeUserHandler} token={jwt} />\r\n          { mainUser === '' ? <></> : clearCacheButton }\r\n        </div>\r\n      </div>\r\n      <div className=\"section\">\r\n        <div className=\"body\">\r\n          <GameList handles={handles} scroll={lastAction === 'add'} token={jwt} />\r\n        </div>\r\n      </div>\r\n      <div className=\"section\">\r\n        <div className=\"body\">\r\n          <div>\r\n            <br/><br/>\r\n            Please send bug reports and feature requests to <a href='mailto:steve@steviedis.co'>steve@steviedis.co</a>\r\n          </div>\r\n          <div style={alignCenter}>\r\n            <br/><br/>\r\n            <a href='/privacypolicy.html' target='_new'>Privacy policy</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Alert content={alertContent} onClose={closeAlert} />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}