{"version":3,"sources":["components/game.tsx","components/gameList.tsx","components/app.tsx","index.tsx"],"names":["Game","props","key","game","appID","name","logoUrl","logoURL","src","alt","getUserId","handle","a","cachedid","localStorage","getItem","JSON","parse","fetch","then","response","json","steamid","setItem","stringify","getGames","cachedgames","games","load","handles","libraries","forEach","process","combined","keys","Object","library","push","unique","Set","compare","b","gameA","toUpperCase","gameB","comparison","sort","filter","obj","some","obj2","current","test","length","compare2","owned","PopulateList","output","GameList","useState","setGames","useEffect","loadLibs","Promise","resolve","libs","className","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAgBeA,MAdf,SAAcC,GAEZ,IAAMC,EAAMD,EAAME,KAAKC,MACjBC,EAAOJ,EAAME,KAAKE,KAClBC,EAAUL,EAAME,KAAKI,QAE3B,OACE,6BACE,4BAAKF,GACL,yBAAKG,IAAKF,EAASG,IAAKJ,EAAMH,IAAKA,MCHnCQ,EAAS,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,yDAEVV,EAFU,UAEDS,EAFC,YAKA,OADVE,EAAWC,aAAaC,QAAQb,KACD,KAAbW,EALR,yCAMPG,KAAKC,MAAMJ,IANJ,uBAQOK,MAAM,GAAD,OAZP,oGAYO,mBAA6BP,IACpDQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UATf,cAQTC,EARS,OAWZR,aAAaS,QAAQrB,EAAKc,KAAKQ,UAAUF,IAX7B,kBAaPA,GAbO,2CAAH,sDAiBTG,EAAQ,uCAAG,WAAOH,GAAP,mBAAAV,EAAA,yDAETV,EAFS,UAEAoB,EAFA,UAKI,OADbI,EAAcZ,aAAaC,QAAQb,KACE,KAAhBwB,EALZ,yCAMNV,KAAKC,MAAMS,IANL,uBAQKR,MAAM,GAAD,OA5BN,6FA4BM,oBAA4BI,IAClDH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UATd,cAQTM,EARS,OAWbb,aAAaS,QAAQrB,EAAKc,KAAKQ,UAAUG,IAX5B,kBAaNA,GAbM,2CAAH,sDAiBRC,EAAI,uCAAG,WAAOC,GAAP,eAAAjB,EAAA,6DAEPkB,EAAY,GAEhBD,EAAQE,QAAR,uCAAgB,WAAOpB,GAAP,iBAAAC,EAAA,sEACgBF,EAAUC,GAD1B,cACRW,EADQ,gBAEMG,EAASH,GAFf,QAERK,EAFQ,UAKZG,EAAUR,GAAWK,GALT,2CAAhB,uDAJW,kBAaJG,GAbI,2CAAH,sDAiBJE,EAAO,uCAAG,WAAOF,GAAP,uBAAAlB,EAAA,6DAGVqB,EAAkB,IAEhBC,EAAOC,OAAOD,KAAKJ,IAEpBC,QAAL,uCAAa,WAAO7B,GAAP,eAAAU,EAAA,sDACLwB,EAAUN,EAAU5B,GAC1B+B,EAASI,KAAT,MAAAJ,EAAQ,YAASG,IAFN,2CAAb,uDAMIE,EAbU,YAaG,IAAIC,IAAIN,IAGnBO,EAAU,SAAC5B,EAAG6B,GAClB,IAAMC,EAAQ9B,EAAEP,KAAKsC,cACfC,EAAQH,EAAEpC,KAAKsC,cAEjBE,EAAa,EAMjB,OALIH,EAAQE,EACVC,EAAa,EACJH,EAAQE,IACjBC,GAAc,GAETA,GAGTP,EAAOQ,KAAKN,GAGZN,EAAKH,QAAL,uCAAa,WAAO7B,GAAP,eAAAU,EAAA,sDAELwB,EAAUN,EAAU5B,GAGdoC,EAAOS,QAAO,SAASC,GAC/B,OAAOZ,EAAQa,MAAK,SAASC,GACzB,OAAOF,EAAI5C,QAAU8C,EAAK9C,YAK5B2B,SAAQ,SAAA5B,GACZ,IAAMgD,EAAUb,EAAOS,QAAO,SAAAK,GAAI,OAAIA,EAAKhD,QAAUD,EAAKC,SAEnC,IAAnB+C,EAAQE,SACNF,EAAQ,GAAR,MACFA,EAAQ,GAAR,QAEAA,EAAQ,GAAR,MAAsB,MAnBjB,2CAAb,uDA0BMG,EAAW,SAAC1C,EAAG6B,GACnB,IAAMC,EAAQ9B,EAAE2C,MACVX,EAAQH,EAAEc,MAEZV,EAAa,EAMjB,OALIH,EAAQE,EACVC,EAAa,EACJH,EAAQE,IACjBC,GAAc,GAETA,GAGTP,EAAOQ,KAAKQ,GAvEE,kBA0EPhB,GA1EO,4CAAH,sDA8Eb,SAASkB,EAAavD,GAEpB,IAAM0B,EAAQ1B,EAAM0B,MAEpB,IAAKA,EAAM0B,OACT,OAAO,KAET,IAAII,EAAgB,GAMpB,OAJA9B,EAAMI,SAAQ,SAAC5B,GACbsD,EAAOpB,KAAK,kBAAC,EAAD,CAAMlC,KAAMA,QAGtBsD,EAAOJ,OACFI,EAEF,KAqCMC,MAjCf,WAAqB,IAAD,EAEQC,mBAAS,IAFjB,mBAEXhC,EAFW,KAEJiC,EAFI,KAwBlB,OApBAC,qBAAU,WAER,IAAMhC,EACN,CACE,eAOIiC,EAAQ,uCAAG,sBAAAlD,EAAA,sEACFgB,EAAKC,GADH,mFAAH,qDAIdkC,QAAQC,QAAQF,KACb3C,MAAK,SAAA8C,GAAI,OAAIjC,EAAQiC,GACnB9C,MAAK,SAAAQ,GAAK,OAAIiC,EAASjC,WAC3B,IAGD,yBAAKuC,UAAU,aACb,yBAAKA,UAAU,WACb,kBAACV,EAAD,CAAc7B,MAAOA,OC/JdwC,MApBf,WACE,OACE,oCACE,yBAAKD,UAAU,aACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,UACb,2CAEF,6BACE,0BAAMA,UAAU,6BAAhB,8FAMN,kBAAC,EAAD,QChBNE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.a2638e38.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Game(props) {\r\n\r\n  const key = props.game.appID;\r\n  const name = props.game.name;\r\n  const logoUrl = props.game.logoURL;\r\n\r\n  return (\r\n    <div>\r\n      <h5>{name}</h5>\r\n      <img src={logoUrl} alt={name} key={key} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Game from './game';\r\n\r\n\r\nconst resolveUserUrl = 'https://9192zxrrp6.execute-api.eu-west-1.amazonaws.com/default/get_steamUserIdFromHandle_Function';\r\nconst gamesListUrl = 'https://k14n0rcap5.execute-api.eu-west-1.amazonaws.com/default/get_userOwnedGames_Function';\r\n\r\n\r\nconst getUserId = async (handle: string) => {\r\n\r\n  const key = `${handle}_steamid`;\r\n\r\n  const cachedid = localStorage.getItem(key);\r\n  if (cachedid != null && cachedid !== '')\r\n    return JSON.parse(cachedid);\r\n\r\n   const steamid = await fetch(`${resolveUserUrl}?handle=${handle}`)\r\n      .then(response => response.json());\r\n\r\n      localStorage.setItem(key, JSON.stringify(steamid));\r\n\r\n    return steamid;\r\n}\r\n\r\n\r\nconst getGames = async (steamid: string) => {\r\n\r\n  const key = `${steamid}_games`;\r\n\r\n  const cachedgames = localStorage.getItem(key);\r\n  if (cachedgames != null && cachedgames !== '')\r\n    return JSON.parse(cachedgames);\r\n\r\n  const games = await fetch(`${gamesListUrl}?steamid=${steamid}`)\r\n    .then(response => response.json());\r\n\r\n    localStorage.setItem(key, JSON.stringify(games));\r\n\r\n    return games;\r\n}\r\n\r\n\r\nconst load = async (handles) => {\r\n\r\n  let libraries = {};\r\n\r\n  handles.forEach(async (handle) => {\r\n    const steamid: string = await getUserId(handle);\r\n    const games = await getGames(steamid);\r\n\r\n    if (games) {\r\n      libraries[steamid] = games;\r\n    }\r\n  });\r\n\r\n  return libraries;\r\n}\r\n\r\n\r\nconst process = async (libraries) => {\r\n\r\n  // combine all libraries, duplicates included\r\n  let combined: any[] = [];\r\n\r\n  const keys = Object.keys(libraries);\r\n\r\n  keys.forEach(async (key) => {\r\n    const library = libraries[key];\r\n    combined.push(...library);\r\n  });\r\n\r\n  // get all unique games in all libraries\r\n  let unique = [...new Set(combined)];\r\n\r\n  // order the unique games\r\n  const compare = (a, b) => {\r\n    const gameA = a.name.toUpperCase();\r\n    const gameB = b.name.toUpperCase();\r\n\r\n    let comparison = 0;\r\n    if (gameA > gameB) {\r\n      comparison = 1;\r\n    } else if (gameA < gameB) {\r\n      comparison = -1;\r\n    }\r\n    return comparison;\r\n  }\r\n\r\n  unique.sort(compare);\r\n\r\n  // count how many users own each game and add a property to record it\r\n  keys.forEach(async (key) => {\r\n\r\n    const library = libraries[key];\r\n\r\n    // find values that are in unique list and also in library\r\n    var owned = unique.filter(function(obj) {\r\n        return library.some(function(obj2) {\r\n            return obj.appID === obj2.appID;\r\n        });\r\n    });\r\n\r\n    // loop through the owned list and increase the count in the unique list\r\n    owned.forEach(game => {\r\n      const current = unique.filter(test => test.appID === game.appID)\r\n\r\n      if (current.length === 1) {\r\n        if (current[0][\"owned\"]) {\r\n          current[0][\"owned\"]++;\r\n        } else {\r\n          current[0][\"owned\"] = 1;\r\n        }\r\n      }\r\n    });\r\n  });\r\n\r\n  // order by number owned\r\n  const compare2 = (a, b) => {\r\n    const gameA = a.owned;\r\n    const gameB = b.owned;\r\n\r\n    let comparison = 0;\r\n    if (gameA > gameB) {\r\n      comparison = 1;\r\n    } else if (gameA < gameB) {\r\n      comparison = -1;\r\n    }\r\n    return comparison;\r\n  }\r\n\r\n  unique.sort(compare2);\r\n\r\n  // trim off games that are only owned by 1 users\r\n  return unique; //.filter(test => test.owned > 1)\r\n}\r\n\r\n\r\nfunction PopulateList(props): any {\r\n\r\n  const games = props.games;\r\n\r\n  if (!games.length)\r\n    return null;\r\n\r\n  let output: any[] = [];\r\n\r\n  games.forEach((game) => {\r\n    output.push(<Game game={game} />);\r\n  });\r\n\r\n  if (output.length)\r\n    return output;\r\n\r\n  return null;\r\n}\r\n\r\n\r\nfunction GameList() {\r\n\r\n  const [games, setGames] = useState({});\r\n\r\n  useEffect(() => {\r\n\r\n    const handles: string[] =\r\n    [\r\n      'steviedisco',\r\n      // 'StealthBanana',\r\n      // 'chipbarm',\r\n      // 'andreas3115',\r\n      // 'Delphboy',\r\n    ];\r\n\r\n    const loadLibs = async () => {\r\n      return await load(handles);\r\n    }\r\n\r\n    Promise.resolve(loadLibs())\r\n      .then(libs => process(libs)\r\n        .then(games => setGames(games)));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"section\">\r\n        <PopulateList games={games} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameList;\r\n","import React from 'react';\nimport './../styles/app.css';\n\nimport GameList from './gameList';\n\nfunction App() {\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"section\">\n          <div className=\"header\">\n            <h1>Steam Room</h1>\n          </div>\n          <pre>\n            <code className=\"prettyprint prettyprinted\">\n              Compare Steam libraries to help organise online multiplayer sessions with your friends.\n            </code>\n          </pre>\n        </div>\n      </div>\n      <GameList />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}