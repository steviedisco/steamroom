{"version":3,"sources":["components/game.tsx","components/gameList.tsx","components/app.tsx","index.tsx"],"names":["img","float","marginRight","div","display","marginBottom","inline","row","Game","props","game","key","appID","style","name","owned","src","logoURL","alt","_","require","getUserId","handle","a","cachedid","localStorage","getItem","JSON","parse","fetch","response","json","steamid","setItem","stringify","getGames","fetchGames","Promise","resolve","then","catch","err","console","log","games","PopulateList","libraries","Object","keys","length","combined","forEach","library","push","unique","uniqWith","isEqual","sort","b","gameA","toUpperCase","gameB","comparison","filter","obj","some","obj2","current","test","process","output","fetchLibraries","handles","fetchLibrary","fetchAll","libs","resolvedCount","i","getLibraries","GameList","useState","setLibraries","useEffect","className","margin","App","onClick","clear","window","location","reload","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.792898de.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst img = {\r\n  float: 'left',\r\n  marginRight: '20px'\r\n} as React.CSSProperties;\r\n\r\nconst div = {\r\n  display: 'table',\r\n  marginBottom: '20px'\r\n} as React.CSSProperties;\r\n\r\nconst inline = {\r\n  display: 'inline',\r\n} as React.CSSProperties;\r\n\r\nconst row = {\r\n  display: 'table-row',\r\n} as React.CSSProperties;\r\n\r\n\r\n\r\nfunction Game(props) {\r\n\r\n  let { game } = props;\r\n  const key = `img_${game.appID}`;\r\n\r\n  return (\r\n    <div style={div}>\r\n      <div style={inline}>\r\n        <h5 style={row}>{game.name}</h5>\r\n        <h5 style={row}>x{game.owned}</h5>\r\n      </div>\r\n      <img key={key} src={game.logoURL} alt={game.name} style={img} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Game from './game';\r\n\r\nvar _ = require('lodash');\r\n\r\nconst resolveUserUrl = 'https://9192zxrrp6.execute-api.eu-west-1.amazonaws.com/default/get_steamUserIdFromHandle_Function';\r\nconst gamesListUrl = 'https://k14n0rcap5.execute-api.eu-west-1.amazonaws.com/default/get_userOwnedGames_Function';\r\n\r\n\r\n\r\nconst process = (libraries) => {\r\n\r\n  if (!libraries) {\r\n    return null;\r\n  }\r\n\r\n  // combine all libraries, duplicates included\r\n  let combined: any[] = [];\r\n\r\n  const keys = Object.keys(libraries);\r\n\r\n  keys.forEach(key => {\r\n    const library = libraries[key];\r\n    combined.push(...library);\r\n  });\r\n\r\n  // get all unique games in all libraries\r\n  let unique = _.uniqWith(combined, _.isEqual);\r\n\r\n  // order the unique games\r\n  const compare = (a, b) => {\r\n    const gameA = a.name.toUpperCase();\r\n    const gameB = b.name.toUpperCase();\r\n\r\n    let comparison = 0;\r\n    if (gameA > gameB) {\r\n      comparison = 1;\r\n    } else if (gameA < gameB) {\r\n      comparison = -1;\r\n    }\r\n    return comparison;\r\n  }\r\n\r\n  unique.sort(compare);\r\n\r\n  // count how many users own each game and add a property to record it\r\n  keys.forEach(key => {\r\n\r\n    const library = libraries[key];\r\n\r\n    // find values that are in unique list and also in library\r\n    var owned = unique.filter(function(obj) {\r\n        return library.some(function(obj2) {\r\n            return obj.appID === obj2.appID;\r\n        });\r\n    });\r\n\r\n    // loop through the owned list and increase the count in the unique list\r\n    owned.forEach(game => {\r\n\r\n      const current = unique.filter(test => test.appID === game.appID)\r\n\r\n      if (current.length === 1) {\r\n        if (current[0][\"owned\"]) {\r\n          current[0][\"owned\"]++;\r\n        } else {\r\n          current[0][\"owned\"] = 1;\r\n        }\r\n      }\r\n    });\r\n  });\r\n\r\n  // order by number owned\r\n  const compare2 = (a, b) => {\r\n    const gameA = a.owned;\r\n    const gameB = b.owned;\r\n\r\n    let comparison = 0;\r\n    if (gameA < gameB) {\r\n      comparison = 1;\r\n    } else if (gameA > gameB) {\r\n      comparison = -1;\r\n    }\r\n    return comparison;\r\n  }\r\n\r\n  unique.sort(compare2);\r\n\r\n  // trim off games that are only owned by 1 users\r\n  const filtered = unique.filter(test => {\r\n    return test.owned > 1\r\n  });\r\n\r\n  return unique;\r\n}\r\n\r\n\r\n\r\nconst getUserId = async (handle: string): Promise<string> => {\r\n\r\n  const key = `${handle}_steamid`;\r\n\r\n  const cachedid = localStorage.getItem(key);\r\n  if (cachedid != null && cachedid !== '')\r\n    return JSON.parse(cachedid);\r\n\r\n  const response = await fetch(`${resolveUserUrl}?handle=${handle}`);\r\n  const steamid = await response.json();\r\n\r\n  localStorage.setItem(key, JSON.stringify(steamid));\r\n\r\n  return steamid;\r\n}\r\n\r\n\r\n\r\nconst getGames = async (steamid) => {\r\n\r\n  const key = `${steamid}_games`;\r\n\r\n/*\r\n  const cachedgames = localStorage.getItem(key);\r\n  if (cachedgames != null && cachedgames !== '')\r\n    return JSON.parse(cachedgames);\r\n*/\r\n\r\n  const fetchGames = (steamid) => {\r\n    return new Promise((resolve) => {\r\n      (async () => {\r\n        await fetch(`${gamesListUrl}?steamid=${steamid}`)\r\n          .then(response => response.json())\r\n          .then(response => {\r\n            resolve(response)\r\n          })\r\n          .catch(err => {\r\n            console.log(\"Game list fetch failed\");\r\n            resolve(null);\r\n          });\r\n        })();\r\n      });\r\n  };\r\n\r\n  const games = await fetchGames(steamid);\r\n\r\n  if (games) {\r\n    localStorage.setItem(key, JSON.stringify(games));\r\n  }\r\n\r\n  return games;\r\n}\r\n\r\n\r\nfunction PopulateList(props): any {\r\n\r\n  let { libraries } = props;\r\n\r\n  if (!libraries) {\r\n    console.log(\"Libraries empty\");\r\n    return null;\r\n  } else {\r\n    const keys = Object.keys(libraries);\r\n    if (!keys.length) {\r\n      console.log(\"Libraries empty\");\r\n      return null;\r\n    }\r\n  }\r\n\r\n  const games = process(libraries);\r\n  if (!games || !games.length) {\r\n    console.log(\"Games empty\");\r\n    return null;\r\n  }\r\n\r\n  let output: any[] = [];\r\n\r\n  games.forEach(game => {\r\n    const key = `game_${game.appID}`;\r\n    output.push(<Game key={key} game={game} />);\r\n  });\r\n\r\n  if (output.length) {\r\n    return output;\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\n\r\nconst fetchLibraries = async (handles) => {\r\n\r\n  const fetchLibrary = (handle) => {\r\n    return new Promise((resolve) => {\r\n      (async () => {\r\n        await getUserId(handle)\r\n          .then(async steamid => {\r\n            await getGames(steamid)\r\n              .then(games => {\r\n                  resolve(games);\r\n              })\r\n          });\r\n        })();\r\n      });\r\n  };\r\n\r\n  const fetchAll = () => {\r\n\r\n    return new Promise((resolve) => {\r\n\r\n      let libs = {};\r\n      let resolvedCount = 0;\r\n\r\n      for (let i = 0; i < handles.length; i++) {\r\n        const handle = handles[i];\r\n\r\n        (async () => {\r\n          const library = await fetchLibrary(handle);\r\n\r\n          if (library) {\r\n            libs[handle] = library;\r\n          }\r\n\r\n          resolvedCount++;\r\n          if (resolvedCount === handles.length) {\r\n            resolve(libs);\r\n          }\r\n        })();\r\n      }\r\n    });\r\n  };\r\n\r\n  const libraries = await fetchAll();\r\n  return libraries;\r\n};\r\n\r\nconst getLibraries = async (handles) => {\r\n  return await fetchLibraries(handles);\r\n};\r\n\r\n\r\nfunction GameList() {\r\n\r\n  const [libraries, setLibraries] = useState({} as any);\r\n\r\n  useEffect(() => {\r\n\r\n    const handles: string[] =\r\n    [\r\n      'steviedisco',\r\n      'delphboy',\r\n      'chipbarm',\r\n      'StealthBanana',\r\n      'andreas3115',\r\n    ];\r\n\r\n    getLibraries(handles)\r\n      .then(libs => {\r\n        setLibraries(libs)\r\n      });\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"section\">\r\n        <PopulateList libraries={libraries} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameList;\r\n","import React from 'react';\nimport './../styles/app.css';\n\nimport GameList from './gameList';\n\n\nconst margin = {\n  marginBottom: '20px'\n} as React.CSSProperties;\n\n\nfunction App() {\n\n  const clearCacheHandler = () => {\n    localStorage.clear();\n    window.location.reload(false);\n  }\n\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"section\">\n          <div className=\"header\">\n            <h1>Steam Room</h1>\n          </div>\n          <pre>\n            <code className=\"prettyprint prettyprinted\">\n              Compare Steam libraries to help organise online multiplayer sessions with your friends.\n            </code>\n          </pre>\n        </div>\n        <div className=\"btn\" style={margin} onClick={clearCacheHandler}>Clear cache</div>\n      </div>\n      <GameList />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}